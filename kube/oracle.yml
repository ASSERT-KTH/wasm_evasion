apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # This name uniquely identifies the PVC. Will be used in deployment below.
  name: oracle-pv-claim
  labels:
    app: oracle-storage-claim
spec:
  # Read more about access modes here: https://kubernetes.io/docs/user-guide/persistent-volumes/#access-modes
  accessModes:
    - ReadWriteOnce
  resources:
    # This is the request for storage. Should be available in the cluster.
    requests:
      storage: 1200Gi
  # Uncomment and add storageClass specific to your requirements below. Read more https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
  #storageClassName:
---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: oracle-deployment
spec:
  selector:
    matchLabels:
      app: oracle
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        # Label is used as selector in the service.
        app: oracle
    spec:
      # Refer to the PVC created earlier
      volumes:
      - name: storage
        persistentVolumeClaim:
          # Name of the PVC created earlier
          claimName: oracle-pv-claim
      containers:
      - name: oracle
        # Pulls the default Minio image from Docker Hub
        image: jacarte/vt_selenium:0285101
        command: ["/bin/bash", "/vt_oracle/entrypoint.sh", "web"]

        env:
        # Minio access key and secret key
        - name: MINIO_ROOT_USER
          value: "minio"
        - name: MINIO_ROOT_PASSWORD
          value: "minio123"
        - name: CONSOLE_SECURE_TLS_REDIRECT
          value: "false"
        - name: WEB_USER
          value: "vt"
        - name: WEB_PASS
          value: "vt123"
        - name: NO_WORKERS
          value: "6"
        - name: MC_ENDPOINT
          value: "exp"
        - name: MC_BUCKET
          value: "my-bucket"
        - name: MINIO_HOST
          value: "http://minio-service.minio:3434"
        - name: MINIO_PASS
          value: "minio123"
        - name: MINIO_USER
          value: "minio"
        - name: MC_FILES
          value: "vt-api-files-service"
        ports:
        - containerPort: 4000
        # Mount the volume into the pod
        volumeMounts:
        - name: storage # must match the volume name, above
          mountPath: "/vt_oracle/data"
---
apiVersion: v1
kind: Service
metadata:
  name: oracle-service
spec:
  ports:
    - name: api
      port: 4000
      targetPort: 4000
      protocol: TCP
  selector:
