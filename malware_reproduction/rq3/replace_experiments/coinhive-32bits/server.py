'''
    This is a replacement server.
    It serves the web resources for the mining. When this scripts executes its first argument is the name of the Wasm binary to serve.
    By using a different binary each time, you can reproduce the RQ3 experiments of the paper, measuring performance and correctness.
'''
from flask import Flask, Response, send_from_directory
import os
import sys
from flask_cors import CORS, cross_origin

app = Flask(__name__)
wasmbin = sys.argv[1]


cors = CORS(app)
CORS(app, support_credentials=True)

def root_dir():  # pragma: no cover
    return os.path.abspath(os.path.dirname(__file__))


def get_file(filename):  # pragma: no cover
    try:
        src = os.path.join(root_dir(), filename)
        # Figure out how flask returns static files
        # Tried:
        # - render_template
        # - send_file
        # This should not be so non-obvious
        return open(src).read()
    except IOError as exc:
        return str(exc)

@app.route("/")
def index():
    content = get_file('Coinhive Miner.html')
    return Response(content, mimetype="text/html")

@app.route("/coinhive.js")
def logic():
    content = get_file('coinhive.js')
    return Response(content, mimetype="javascript/application")


@app.route("/worker.js")
def worker():
    content = get_file('worker.js')
    content = content.replace("%BIN", wasmbin)
    # Replace the bin address by the one passed in the server init
    return Response(content, mimetype="javascript/application")

def find_file(name):
    for parent, p, files in os.walk(root_dir()):
        for filename in files:
            if filename.startswith(name) and filename.endswith(".wasm"):

                return os.path.join(parent, filename)
    raise Exception("Not found")

@app.route("/wasm/<name>")
def wasm(name):
    # find the file by name
    op = open("binname.txt", "r").read()
    binfile = find_file(op)
    print(binfile)

    content = open(binfile, "rb").read()
    # Replace the bin address by the one passed in the server init
    return Response(content, mimetype="wasm/application")



if __name__ == '__main__':  # pragma: no cover
    app.run(port=7676, debug=True, host="127.0.0.1")
