from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
import os
import time
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
import sys

def setUp():
    #os.putenv('PREDEF_FILE', os.path.abspath("name.socket"))
    #os.environ['PREDEF_FILE'] = os.path.abspath("name.socket")
    options = webdriver.ChromeOptions()
    #PROXY = "socks5://127.0.0.1:9050" # IP:PORT or HOST:PORT
    #options.add_argument('--proxy-server=%s' % PROXY)
    options.add_argument("disable-infobars"); # disabling infobars
    options.add_argument("--disable-extensions"); # disabling extensions
    options.add_argument("--disable-gpu"); # applicable to windows os only
    options.add_argument("--disable-dev-shm-usage"); # overcome limited resource problems
    options.add_argument("--no-sandbox"); #Bypass OS security model
    options.add_experimental_option("excludeSwitches",["ignore-certificate-errors"])
    # options.add_argument('--headless')
    options.add_argument("--enable-automation")
    options.add_argument("--dns-prefetch-disable")
    options.add_argument('window-size=1200x3000')
    #options.add_argument("--window-size=3200x20800")
    path = os.path.join(os.path.dirname(__file__), "chromedriver")
    d = DesiredCapabilities.CHROME
    d['loggingPrefs'] = { 'browser':'ALL' }

    
    driver = webdriver.Chrome(path, options=options, desired_capabilities=d)

    return driver


dr = setUp()
dr.get("http://localhost:7676")

time.sleep(1)
dr.find_element(By.ID, "mining-button-text").click()

TO_COLLECT = 1000
SAMPLES = []
while True:
    time.sleep(1)
    # print messages
    tx = dr.find_element(By.ID, "hashes-total")
    n = tx.text
    SAMPLES.append(n)
    TO_COLLECT -= 1

    if TO_COLLECT < 0:
        break

# Create the file with the name
open(sys.argv[1], "w").write(",".join(SAMPLES[10:]))
dr.close()