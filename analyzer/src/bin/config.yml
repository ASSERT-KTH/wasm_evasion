name: analyzer
version: "1.0"
author: Javier Cabrera <javierca@kth.se>
about: Process Wasm binaries. This is a compound of slumps tools, all migrated to a Rust implementation
subcommands:
    - extract:
        about: Extract metadata information from the binaries
        args:
        - input:
            required: true
            short: f
            long: input
            help: "Folder containing the binaries"
            value_name: "file|folder"
        - reset:
            short: r
            help: "Clean out database before starting the extraction of metadatas"
        - patch:
            short: p
            required: false
            help: "Do not get deep info. Instead, it wil read the static info and will patch the metadata already saved"
        - depth:
            short: d
            required: false
            takes_value: true
            value_name: "depth"
            long: depth
            help: "How deep the extraction should go (0 for the minimum)"
        - timeout:
            short: t
            required: false
            takes_value: true
            value_name: "timeout"
            long: timeout
            help: "Timeout to process a binary. If the timeout is reached the sample ratio is divided by 2 until 1/16 is reached"
        
        - sample:
            short: s
            required: false
            takes_value: true
            value_name: "sample_ratio"
            long: sample
            default_value: "1" # 1/x prob of taking that instruction
            help: "This option is only used to inspect the graph for instructions. The size of all options is huge, so we need to sample the instructions"
        
        - seed:
            required: false
            takes_value: true
            value_name: "seed"
            long: seed
            default_value: "0"
            help: "Seed of the instruction sampling"

    - export:
        about: Export database data as a JSON file
        args:
          - out:
              takes_value: true
              help: Output file
          - list:
                short: l
                help: "List collections"
          - csv:
                short: c
                long: csv
                required: false
                help: "Export as csv. This option is a little bit faster than exporting all the collection as a JSON."
          - level:
                long: level
                required: false
                default_value: "1"
                takes_value: true
                help: "Level of the exported data (1 the minimum, only level 1 can be exported to csv)"
                value_name: "level"    
            
    - reduce:
        about: Takes a folder of Wasm binaries and apply the reduction implementation of wasm-mutate. It saves the new binary in the out directory and creates an entry in the db with the canonical representation of the original binary
        args:
            - input:
                required: true
                help: "Folder containing the binaries"
                value_name: "file|folder"
                takes_value: true
                short: f
                long: input
            - out:
                required: true
                help: "Folder containing the canonical representation"
                takes_value: true
                value_name: "out"
                short: o
                long: out
            - reset:
                short: r
                help: "Clean out database before starting the extraction of metadatas"
            - save_logs:
                required: false
                short: s
                long: save-logs
                help: "Save reduction logs from wasm-shrink"
    - clean:
        about: Hard reset the database
    
    - reduce:
        about: Reduce binary to its minimal expression according to wasm-mutate implementation

    - diversify:
        about: Diversify source code, input C/C++, Wasm or LLVM
        args:
          - out:
              help: Out file, type of output is decided by file extension
args:
  - dbconn:
      short: n
      long: dbconn
      default_value: "data_db"
      help: "Sled db folder address"
      value_name: "dbconn"
      takes_value: true
      